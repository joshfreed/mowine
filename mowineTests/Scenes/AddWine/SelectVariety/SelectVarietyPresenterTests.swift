//
//  SelectVarietyPresenterTests.swift
//  mowine
//
//  Created by Josh Freed on 7/8/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import mowine
import XCTest
import Nimble

class SelectVarietyPresenterTests: XCTestCase {
    // MARK: Subject under test

    var sut: SelectVarietyPresenter!
    let viewController = MockDisplayLogic()
    var variety1: WineVariety!
    var variety2: WineVariety!
    var variety3: WineVariety!

    // MARK: Test lifecycle

    override func setUp() {
        super.setUp()
        setupSelectVarietyPresenter()
        
        variety1 = WineVariety(name: "Z Variety")
        variety2 = WineVariety(name: "A Variety")
        variety3 = WineVariety(name: "Q Variety")
    }

    override func tearDown() {
        super.tearDown()
    }

    // MARK: Test setup

    func setupSelectVarietyPresenter() {
        sut = SelectVarietyPresenter()
        sut.viewController = viewController
    }

    // MARK: Test doubles
    
    class MockDisplayLogic: SelectVarietyDisplayLogic {
        var displayVarietiesCallCount = 0
        var displayVarietiesViewModel: SelectVariety.FetchVarieties.ViewModel?
        func displayVarieties(viewModel: SelectVariety.FetchVarieties.ViewModel) {
            displayVarietiesCallCount += 1
            displayVarietiesViewModel = viewModel
        }
        func verifyDisplayVarieties(callCount: Int, varieties: [String]) {
            expect(self.displayVarietiesCallCount).to(equal(callCount))
            expect(self.displayVarietiesViewModel?.varieties).to(haveCount(varieties.count))
            for i in 0..<varieties.count {
                expect(self.displayVarietiesViewModel?.varieties[i]).to(equal(varieties[i]))
            }
        }
        
        func displaySelectedVariety(viewModel: SelectVariety.SelectVariety.ViewModel) {
            
        }
    }

    // MARK: Tests

    func testPresentVarieties_returnsArrayOfNames() {
        // Given
        let varieties: [WineVariety] = [variety2, variety3, variety1]
        let response = SelectVariety.FetchVarieties.Response(varieties: varieties)

        // When
        sut.presentVarieties(response: response)

        // Then
        viewController.verifyDisplayVarieties(
            callCount: 1,
            varieties: ["A Variety", "Q Variety", "Z Variety"]
        )
    }
    
    func testPresentVarieties_alphabetizesTheVarietyNames() {
        // Given
        let varieties: [WineVariety] = [variety1, variety3, variety2]
        let response = SelectVariety.FetchVarieties.Response(varieties: varieties)
        
        // When
        sut.presentVarieties(response: response)
        
        // Then
        viewController.verifyDisplayVarieties(
            callCount: 1,
            varieties: ["A Variety", "Q Variety", "Z Variety"]
        )
    }
}
