//
//  ConfirmPhotoInteractor.swift
//  mowine
//
//  Created by Josh Freed on 8/11/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ConfirmPhotoBusinessLogic {
    func getPhotoPreview(request: ConfirmPhoto.GetPhotoPreview.Request)
    func useDifferentImage(request: ConfirmPhoto.UseDifferentImage.Request)
}

protocol ConfirmPhotoDataStore {
    var wineType: Type! { get set }
    var variety: Variety! { get set }
    var photo: UIImage! { get set }
}

class ConfirmPhotoInteractor: ConfirmPhotoBusinessLogic, ConfirmPhotoDataStore {
    var presenter: ConfirmPhotoPresentationLogic?
    var wineType: Type!
    var variety: Variety!
    var photo: UIImage!

    // MARK: Get photo preview

    func getPhotoPreview(request: ConfirmPhoto.GetPhotoPreview.Request) {
        let response = ConfirmPhoto.GetPhotoPreview.Response(photo: photo)
        presenter?.presentPhotoPreview(response: response)
    }
    
    // MARK: Use a different photo
    
    func useDifferentImage(request: ConfirmPhoto.UseDifferentImage.Request) {
        photo = request.image
        
        let response = ConfirmPhoto.GetPhotoPreview.Response(photo: photo)
        presenter?.presentPhotoPreview(response: response)
    }
}
