//
//  WineCellarInteractor.swift
//  mowine
//
//  Created by Josh Freed on 3/15/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WineCellarBusinessLogic {
    func getWineTypes(request: WineCellar.GetWineTypes.Request)
}

protocol WineCellarDataStore {
    //var name: String { get set }
}

class WineCellarInteractor: WineCellarBusinessLogic, WineCellarDataStore {
    var presenter: WineCellarPresentationLogic?
    var worker: WineCellarWorker?
    var types: [WineType] = []

    // MARK: Get wine types

    func getWineTypes(request: WineCellar.GetWineTypes.Request) {        
        worker?.getWineTypes() { result in
            switch result {
            case .success(let types):
                self.types = types
                let response = WineCellar.GetWineTypes.Response(types: types)
                self.presenter?.presentWineTypes(response: response)
            case .failure(let error): print("\(error)")
            }
        }
    }
}
