//
//  UserProfileWorker.swift
//  mowine
//
//  Created by Josh Freed on 3/13/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import JFLib

enum UserProfileWorkerError: Error {
    case notLoggedIn
}

class UserProfileWorker {
    let userRepository: UserRepository
    let session: Session
    
    init(userRepository: UserRepository, session: Session) {
        self.userRepository = userRepository
        self.session = session
    }
    
    func fetchUser(userId: UserId, completion: @escaping (Result<User?>) -> ()) {
        userRepository.getUserById(userId, completion: completion)            
    }
    
    func friend(userId: UserId, completion: @escaping (Result<User>) -> ()) {
        guard let currentUserId = session.currentUserId else {
            completion(.failure(UserProfileWorkerError.notLoggedIn))
            return
        }
        
        userRepository.addFriend(owningUserId: currentUserId, friendId: userId, completion: completion)
    }
    
    func unfriend(userId: UserId, completion: @escaping (EmptyResult) -> ()) {
        guard let currentUserId = session.currentUserId else {
            completion(.failure(UserProfileWorkerError.notLoggedIn))
            return
        }
        
        userRepository.removeFriend(owningUserId: currentUserId, friendId: userId, completion: completion)
    }
}
