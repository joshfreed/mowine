//
//  FirstTimeViewController.swift
//  mowine
//
//  Created by Josh Freed on 3/20/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FBSDKLoginKit
import SwiftyBeaver
import JFLib
import GoogleSignIn

protocol FirstTimeViewControllerDelegate: class {
    func showSignedInView()
}

class FirstTimeViewController: UIViewController {
    weak var delegate: FirstTimeViewControllerDelegate?
    var worker: FirstTimeWorker!
    var loadingView: LoadingView!

    override func viewDidLoad() {
        super.viewDidLoad()
        
        // TODO - Move into service container?
        let fbAuth = JFContainer.shared.facebookAuthService
        let fbGraphApi = JFContainer.shared.fbGraphApi
        let userRepository = JFContainer.shared.userRepository
        let session = JFContainer.shared.session
        let googleAuth: GoogleAuthenticationService = try! JFContainer.shared.container.resolve()
        let facebookProvider = FacebookProvider(fbAuth: fbAuth, fbGraphApi: fbGraphApi)
        let googleProvider = GoogleProvider(googleAuth: googleAuth)
        let facebookSignInWorker = SocialSignInWorker<FacebookProvider>(userRepository: userRepository, session: session, provider: facebookProvider)
        let googleSignInWorker = SocialSignInWorker<GoogleProvider>(userRepository: userRepository, session: session, provider: googleProvider)
        worker = FirstTimeWorker(facebookSignInWorker: facebookSignInWorker, googleSignInWorker: googleSignInWorker)

        loadingView = LoadingView(parentView: navigationController!.view)        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: true)
    }
    
    // MARK: Continue with Facebook

    @IBAction func tappedContinueWithFacebook(_ sender: MWButton) {
        let login = LoginManager()
        login.logIn(permissions: ["public_profile", "email"], from: nil) { result, error in
            if let error = error {
                SwiftyBeaver.error("FB Error: \(error)")
                return
            }
            
            if let result = result, !result.isCancelled, let token = result.token {
                self.linkToFacebookLogin(fbToken: token.tokenString)
            }
        }
    }
    
    private func linkToFacebookLogin(fbToken: String) {
        loadingView.show("Signing in...")
        worker.loginWithFacebook(token: fbToken, completion: socialSignInComplete)
    }
    
    // MARK: Continue with Google
    
    @IBAction func tappedContinueWithGoogle(_ sender: Any) {
        GIDSignIn.sharedInstance().delegate = self
        GIDSignIn.sharedInstance().presentingViewController = self
        GIDSignIn.sharedInstance().signIn()        
    }
    
    func linkToGoogleLogin(idToken: String, accessToken: String) {
        loadingView.show("Signing in...")
        worker.loginWithGoogle(idToken: idToken, accessToken: accessToken, completion: socialSignInComplete)
    }
    
    // MARK: Continue with email
    
    @IBAction func tappedContinueWithEmail(_ sender: ButtonOutline) {
        let signUp = SignUpByEmailViewController(delegate: self)
        present(signUp, animated: true, completion: nil)
    }
    
    // MARK: Sign in with email
    
    @IBAction func tappedSignInWithEmail(_ sender: UIButton) {
        let signIn = SignInByEmailViewController(delegate: self)
        present(signIn, animated: true, completion: nil)
    }

    // Helpers

    func socialSignInComplete(result: Result<User>) {
        loadingView.hide()
        
        switch result {
        case .success: showSignedInView()
        case .failure(let error): showAlert(title: "Login Error", message: error.localizedDescription)
        }
    }
    
    private func showSignedInView() {
        delegate?.showSignedInView()
    }
}

extension FirstTimeViewController: GIDSignInDelegate {
    func sign(_ signIn: GIDSignIn!, didSignInFor user: GIDGoogleUser!, withError error: Error!) {
        if let error = error as NSError? {
            SwiftyBeaver.error(error)
            guard error.code != -5 else {
                return
            }
            fatalError(error.localizedDescription)
//            ErrorBanner.show(message: error.localizedDescription)
        } else {
            linkToGoogleLogin(idToken: user.authentication.idToken, accessToken: user.authentication.accessToken)
        }
    }
    
    func sign(_ signIn: GIDSignIn!, didDisconnectWith user: GIDGoogleUser!, withError error: Error!) {
        // Perform any operations when the user disconnects from app here.
        // ...
    }
}

extension FirstTimeViewController: SignUpByEmailViewControllerDelegate {
    func signUpComplete() {
        showSignedInView()
    }
}

extension FirstTimeViewController: SignInByEmailViewControllerDelegate {
    func signInComplete() {
        showSignedInView()
    }
}
