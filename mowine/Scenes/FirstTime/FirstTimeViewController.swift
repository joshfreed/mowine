//
//  FirstTimeViewController.swift
//  mowine
//
//  Created by Josh Freed on 3/20/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import FBSDKLoginKit
import SwiftyBeaver

protocol FirstTimeDisplayLogic: class {
    func displayFacebookLogin(viewModel: FirstTime.FacebookLogin.ViewModel)
}

class FirstTimeViewController: UIViewController, FirstTimeDisplayLogic {
    var interactor: FirstTimeBusinessLogic?
    var router: (NSObjectProtocol & FirstTimeRoutingLogic & FirstTimeDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = FirstTimeInteractor()
        let presenter = FirstTimePresenter()
        let router = FirstTimeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        interactor.worker = FirstTimeWorker(
            fbAuth: Container.shared.facebookAuthService,
            fbGraphApi: Container.shared.fbGraphApi,
            userRepository: Container.shared.userRepository,
            session: Container.shared.session
        )
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.setNavigationBarHidden(true, animated: true)
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        navigationController?.setNavigationBarHidden(false, animated: true)
    }

    // MARK: Continue with Facebook

    @IBAction func tappedContinueWithFacebook(_ sender: MWButton) {
        let login = FBSDKLoginManager()
        login.logIn(withReadPermissions: ["public_profile", "email"], from: self) { result, error in
            if let error = error {
                SwiftyBeaver.error("FB Error: \(error)")
                return
            }
            
            if let result = result, !result.isCancelled {
//                self.loadingView?.show("Signing in...")
                self.interactor?.linkToFacebookLogin(fbToken: result.token.tokenString)
            }
        }
    }
    
    func displayFacebookLogin(viewModel: FirstTime.FacebookLogin.ViewModel) {
        if viewModel.error == nil {
            router?.routeToSignedIn()
        } else {
            showAlert(title: "Login Error", message: "An error occurred while trying to login with Facebook")
        }
    }

    // MARK: Continue with email
    
    @IBAction func tappedContinueWithEmail(_ sender: ButtonOutline) {
        performSegue(withIdentifier: "SignUp", sender: nil)
    }
}
