//
//  MyAccountViewController.swift
//  mowine
//
//  Created by Josh Freed on 2/27/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MyAccountDisplayLogic: class {
    func displayUser(viewModel: MyAccount.GetUser.ViewModel)
    func displayErrorGettingUser()
    func displaySignedOut(viewModel: MyAccount.SignOut.ViewModel)
}

class MyAccountViewController: UIViewController, MyAccountDisplayLogic {
    var interactor: MyAccountBusinessLogic?
    var router: (NSObjectProtocol & MyAccountRoutingLogic & MyAccountDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = MyAccountInteractor()
        let presenter = MyAccountPresenter()
        let router = MyAccountRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        interactor.worker = MyAccountWorker(session: Container.shared.session)
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        getUser()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        UIApplication.shared.statusBarStyle = .default
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        UIApplication.shared.statusBarStyle = .lightContent
    }

    // MARK: Do something

    @IBOutlet weak var profilePictureImageView: UIImageView!
    @IBOutlet weak var fullNameLabel: UILabel!
    @IBOutlet weak var emailAddressLabel: UILabel!

    func getUser() {
        let request = MyAccount.GetUser.Request()
        interactor?.getUser(request: request)
    }

    func displayUser(viewModel: MyAccount.GetUser.ViewModel) {
        fullNameLabel.text = viewModel.fullName
        emailAddressLabel.text = viewModel.emailAddress
        profilePictureImageView.image = viewModel.profilePicture
    }
    
    func displayErrorGettingUser() {
        
    }
    
    // MARK: Sign Out
    
    @IBAction func tappedSignOut(_ sender: UIButton) {
        let alertController = UIAlertController(title: nil, message: nil, preferredStyle: .actionSheet)
        alertController.addAction(UIAlertAction(title: "Sign Out", style: .destructive, handler: { _ in
            self.signOut()
        }))
        alertController.addAction(UIAlertAction(title: "Cancel", style: .cancel, handler: nil))
        present(alertController, animated: true, completion: nil)
    }
    
    func signOut() {
        let request = MyAccount.SignOut.Request()
        interactor?.signOut(request: request)
    }
    
    func displaySignedOut(viewModel: MyAccount.SignOut.ViewModel) {
        router?.routeToMainMenu()
    }
}
