//
//  MyWinesPresenter.swift
//  mowine
//
//  Created by Josh Freed on 1/7/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol MyWinesPresenterInput {
    func presentMyWines(response: MyWines.FetchMyWines.Response)
}

protocol MyWinesPresenterOutput: class {
    func displayMyWines(viewModel: MyWines.FetchMyWines.ViewModel)
}

class MyWinesPresenter: MyWinesPresenterInput {
    weak var output: MyWinesPresenterOutput!

    // MARK: - Presentation logic

    func presentMyWines(response: MyWines.FetchMyWines.Response) {
        let wineViewModels: [MyWines.FetchMyWines.ViewModel.WineViewModel] = response.wines.map { wine in
            let name = wine.name ?? ""
            var varietyName = ""
            if let variety = wine.variety {
                varietyName = variety.name ?? ""
            }
            var image: UIImage?
            if let imageData = wine.image as? Data {
                image = UIImage(data: imageData)
            }
            return MyWines.FetchMyWines.ViewModel.WineViewModel(
                thumbnail: image,
                name: name,
                variety: varietyName,
                rating: wine.rating
            )
        }

        let viewModel = MyWines.FetchMyWines.ViewModel(wines: wineViewModels)
        output.displayMyWines(viewModel: viewModel)
    }
}
