//
//  MyWinesPresenter.swift
//  mowine
//
//  Created by Josh Freed on 3/15/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MyWinesPresentationLogic {
    func presentMyWines(response: MyWines.FetchMyWines.Response)
    func presentUpdatedWine(wine: Wine)
}

class MyWinesPresenter: MyWinesPresentationLogic {
    weak var viewController: MyWinesDisplayLogic?

    private func buildWineViewModel(fromModel wine: Wine) -> WineListViewModel {
        let name = wine.name
        let varietyName = wine.varietyName
        
        var thumbnail: UIImage?
        if let imageData = wine.thumbnail {
            thumbnail = UIImage(data: imageData)
        }
        
        return WineListViewModel(
            id: wine.id.uuidString,
            name: name,
            rating: wine.rating,
            type: varietyName,
            thumbnail: thumbnail
        )
    }
    
    func presentMyWines(response: MyWines.FetchMyWines.Response) {
        let wineViewModels: [WineListViewModel] = response.wines.map { wine in
            buildWineViewModel(fromModel: wine)
        }
        
        let viewModel = MyWines.FetchMyWines.ViewModel(wines: wineViewModels)
        viewController?.displayMyWines(viewModel: viewModel)
    }
    
    func presentUpdatedWine(wine: Wine) {
        viewController?.displayUpdatedWine(viewModel: buildWineViewModel(fromModel: wine))
    }
}
