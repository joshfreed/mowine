//
//  NameWineInteractor.swift
//  mowine
//
//  Created by Josh Freed on 8/11/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SwiftyBeaver

protocol NameWineBusinessLogic {
    func createWine(request: NameWine.CreateWine.Request)
}

protocol NameWineDataStore {
    var wineType: WineType! { get set }
    var variety: WineVariety? { get set }
    var photo: UIImage? { get set }
}

class NameWineInteractor: NameWineBusinessLogic, NameWineDataStore {
    var presenter: NameWinePresentationLogic?
    var worker: WineWorker!
    var wineType: WineType!
    var variety: WineVariety?
    var photo: UIImage?

    // MARK: Create Wine
    
    func createWine(request: NameWine.CreateWine.Request) {
        worker.createWine(type: wineType, variety: variety, name: request.name, rating: request.rating, photo: photo) { result in
            switch result {
            case .success:
                let response = NameWine.CreateWine.Response()
                self.presenter?.presentWine(response: response)
            case .failure(let error):
                SwiftyBeaver.error("\(error)")
                self.presenter?.presentErrorCreatingWine(error)
            }
        }
    }
}
