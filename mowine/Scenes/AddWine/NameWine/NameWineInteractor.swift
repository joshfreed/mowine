//
//  NameWineInteractor.swift
//  mowine
//
//  Created by Josh Freed on 8/11/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NameWineBusinessLogic {
    func getPhotoPreview(request: NameWine.GetPhotoPreview.Request)
    func updateName(request: NameWine.UpdateName.Request)
    func updateRating(request: NameWine.UpdateRating.Request)
}

protocol NameWineDataStore {
    var wineType: WineType! { get set }
    var variety: WineVariety! { get set }
    var photo: UIImage? { get set }
    var name: String { get }
    var rating: Double { get }
}

class NameWineInteractor: NameWineBusinessLogic, NameWineDataStore {
    var presenter: NameWinePresentationLogic?
    var wineType: WineType!
    var variety: WineVariety!
    var photo: UIImage?
    var name: String = ""
    var rating: Double = 0

    // MARK: Get photo preview

    func getPhotoPreview(request: NameWine.GetPhotoPreview.Request) {
        let response = NameWine.GetPhotoPreview.Response(photo: photo)
        presenter?.presentPhotoPreview(response: response)
    }
    
    // MARK: Update name
    
    func updateName(request: NameWine.UpdateName.Request) {
        name = request.name ?? ""
        
        let response = NameWine.UpdateName.Response()
        presenter?.presentName(response: response)
    }
    
    // MARK: Update rating
    
    func updateRating(request: NameWine.UpdateRating.Request) {
        rating = request.rating
        
        let response = NameWine.UpdateRating.Response()
        presenter?.presentRating(response: response)
    }
}
