//
//  AddWineViewController.swift
//  mowine
//
//  Created by Josh Freed on 1/7/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit
import Eureka

protocol AddWineViewControllerInput {
    func displayForm(viewModel: AddWine.FetchForm.ViewModel)
    func displayNewWine()
}

protocol AddWineViewControllerOutput {
    func fetchForm(request: AddWine.FetchForm.Request)
    func addWine(request: AddWine.SaveWine.Request)
}

class AddWineViewController: FormViewController, AddWineViewControllerInput {
    var output: AddWineViewControllerOutput!
    var router: AddWineRouter!

    let nameRow = TextRow("name") {
        $0.title = "Name"
        $0.placeholder = "Fancy Wine Name"
    }
    let varietyRow = PushRow<String>("variety") {
        $0.title = "Variety"
        $0.options = []
    }
    let typeRow = PushRow<AddWine.FetchForm.ViewModel.WineType>("type") {
        $0.title = "Type"
        $0.options = []
    }
    
    // MARK: - Object lifecycle

    override func awakeFromNib() {
        super.awakeFromNib()
        AddWineConfigurator.sharedInstance.configure(viewController: self)
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()

        buildForm()
        fetchFormOnLoad()
    }
    
    func buildForm() {
        typeRow.onChange { row in
            if let value = row.value {
                self.varietyRow.options = value.varieties
            } else {
                self.varietyRow.options = []
            }
            
            self.varietyRow.value = nil
            self.varietyRow.updateCell()
        }
        
        form = Section()
            <<< nameRow
            <<< RatingRow("rating") {
                $0.title = "Rating"
                $0.cell.selectionStyle = .none
            }
            +++ Section(header: "Photo", footer: "Take or select a photo of this wine.")
            <<< PhotoRow("photo") {
                $0.title = nil
            }
            +++ Section()
            <<< typeRow
            <<< varietyRow
            <<< TextRow("location") {
                $0.title = "Location"
                $0.placeholder = "Where did I find this wine?"
            }
            <<< DecimalRow("price") {
                $0.title = "Price"
                $0.placeholder = "How much was this wine?"
            }
            +++ Section("Pairs well with")
            +++ Section("Notes")
            <<< TextAreaRow("notes")
        
        nameRow.cell.textField.becomeFirstResponder()

    }

    // MARK: - Event handling
    
    func fetchFormOnLoad() {
        let request = AddWine.FetchForm.Request()
        output.fetchForm(request: request)
    }
    
    @IBAction func saveWineAction(_ sender: UIBarButtonItem) {
        let valuesDictionary = form.values()
        
        guard let name = valuesDictionary["name"] as? String else {
            return
        }
        guard let rating = valuesDictionary["rating"] as? Double else {
            return
        }
        guard let type = valuesDictionary["type"] as? AddWine.FetchForm.ViewModel.WineType else {
            return
        }
        guard let variety = valuesDictionary["variety"] as? String else {
            return
        }
        
        let location = valuesDictionary["location"] as? String
        let price = valuesDictionary["price"] as? Double
        let notes = valuesDictionary["notes"] as? String
        
        var request = AddWine.SaveWine.Request(
            name: name,
            rating: rating,
            type: type,
            variety: variety
        )
        request.location = location
        request.price = price
        request.notes = notes
        
        request.image = valuesDictionary["photo"] as? UIImage
        
        
        output.addWine(request: request)
    }
    
    @IBAction func cancelAction(_ sender: UIBarButtonItem) {
        dismiss(animated: true, completion: nil)
    }
    
    // MARK: - Display logic

    func displayForm(viewModel: AddWine.FetchForm.ViewModel) {
        typeRow.options = viewModel.types
    }
    
    func displayNewWine() {
        router.navigateToMainMenu()
    }
}
