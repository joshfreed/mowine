//
//  SelectVarietyInteractor.swift
//  mowine
//
//  Created by Josh Freed on 7/4/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectVarietyBusinessLogic {
    func fetchVarieties(request: SelectVariety.FetchVarieties.Request)
    func selectVariety(request: SelectVariety.SelectVariety.Request)
}

protocol SelectVarietyDataStore {
    var wineType: ManagedWineType! { get set }
    var selectedVariety: ManagedWineVariety? { get }
}

class SelectVarietyInteractor: SelectVarietyBusinessLogic, SelectVarietyDataStore {
    var presenter: SelectVarietyPresentationLogic?
    var wineType: ManagedWineType!
    var varieties: [ManagedWineVariety] = []
    var selectedVariety: ManagedWineVariety?

    // MARK: Fetch Varieties

    func fetchVarieties(request: SelectVariety.FetchVarieties.Request) {
        guard let varieties = wineType.varieties?.allObjects as? [ManagedWineVariety] else {
            return
        }
        
        self.varieties = varieties
        
        let response = SelectVariety.FetchVarieties.Response(varieties: varieties)
        presenter?.presentVarieties(response: response)
    }
    
    // MARK: Select variety
    
    func selectVariety(request: SelectVariety.SelectVariety.Request) {
        guard let variety = varieties.first(where: { $0.name == request.variety }) else {
            return
        }
        
        selectedVariety = variety
        
        let response = SelectVariety.SelectVariety.Response()
        presenter?.presentSelectedVariety(response: response)
    }
}
