//
//  SelectTypeInteractor.swift
//  mowine
//
//  Created by Josh Freed on 7/4/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SelectTypeBusinessLogic {
    func selectType(request: SelectType.SelectType.Request)
}

protocol SelectTypeDataStore {
    var selectedType: WineType? { get }
}

class SelectTypeInteractor: SelectTypeBusinessLogic, SelectTypeDataStore {
    var presenter: SelectTypePresentationLogic?
    var worker: SelectTypeWorker?
    var selectedType: WineType?

    // MARK: Select wine type
    
    func selectType(request: SelectType.SelectType.Request) {
        worker?.getWineType(named: request.type) { result in
            switch result {
            case .success(let type): self.didSelectType(type: type)
            case .failure(let error): fatalError("\(error)")
            }
        }
    }
    
    private func didSelectType(type: WineType?) {
        guard let type = type else {
            return
        }
        
        selectedType = type
        
        let response = SelectType.SelectType.Response(type: type)
        presenter?.presentSelectedType(response: response)
    }
}
