//
//  RateWineViewController.swift
//  mowine
//
//  Created by Josh Freed on 9/20/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Cosmos

protocol RateWineDisplayLogic: class {
    func displayWine(viewModel: RateWine.GetWine.ViewModel)
}

class RateWineViewController: UIViewController, RateWineDisplayLogic {
    var interactor: RateWineBusinessLogic?
    var router: (NSObjectProtocol & RateWineRoutingLogic & RateWineDataPassing)?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = RateWineInteractor()
        let presenter = RateWinePresenter()
        let router = RateWineRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        
        doneButton.isHidden = true
        doneButton.alpha = 0
        
        getWine()
    }

    // MARK: Get wine

    @IBOutlet weak var photoImageView: UIImageView!
    @IBOutlet weak var nameLabel: UILabel!
    @IBOutlet weak var doneButton: ButtonPrimary!
    @IBOutlet weak var ratingView: CosmosView!

    func getWine() {
        let request = RateWine.GetWine.Request()
        interactor?.getWine(request: request)
    }

    func displayWine(viewModel: RateWine.GetWine.ViewModel) {
        if let photo = viewModel.photo {
            photoImageView.image = photo
            photoImageView.layer.cornerRadius = photoImageView.frame.size.width / 2
            photoImageView.clipsToBounds = true
            photoImageView.contentMode = .scaleAspectFill
        } else {
            photoImageView.image = #imageLiteral(resourceName: "bottle-of-wine")
            photoImageView.clipsToBounds = false
            photoImageView.contentMode = .scaleAspectFit
            photoImageView.tintColor = UIColor.lightGray
        }
        
        nameLabel.text = viewModel.name
    }
    
    // MARK: Helper funcs
    
    func showDoneButton() {
        doneButton.isHidden = false
        
        UIView.animate(withDuration: 0.1) {
            self.doneButton.alpha = 1.0
        }
    }
    
    func hideDoneButton() {
        UIView.animate(withDuration: 0.1, animations: {
            self.doneButton.alpha = 0
        }, completion: { _ in
            self.doneButton.isHidden = true
        })
    }
}
