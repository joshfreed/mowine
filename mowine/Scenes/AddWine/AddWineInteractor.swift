//
//  AddWineInteractor.swift
//  mowine
//
//  Created by Josh Freed on 1/7/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol AddWineInteractorInput {
    func fetchForm(request: AddWine.FetchForm.Request)
    func addWine(request: AddWine.SaveWine.Request)
}

protocol AddWineInteractorOutput {
    func presentForm(response: AddWine.FetchForm.Response)
    func presentWine(response: AddWine.SaveWine.Response)
    func presentError(_ error: Error)
}

class AddWineInteractor: AddWineInteractorInput {
    var output: AddWineInteractorOutput!
    let worker: AddWineWorker
    let wineTypeWorker: WineTypeWorker

    init(worker: AddWineWorker, wineTypeWorker: WineTypeWorker) {
        self.worker = worker
        self.wineTypeWorker = wineTypeWorker
    }
    
    // MARK: - Business logic

    func fetchForm(request: AddWine.FetchForm.Request) {
        let wineTypes = wineTypeWorker.getWineTypes()

        let response = AddWine.FetchForm.Response(wineTypes: wineTypes)
        output.presentForm(response: response)
    }
    
    func addWine(request: AddWine.SaveWine.Request) {
        do {
            let wine = try worker.createWine(request: request)
            output.presentWine(response: AddWine.SaveWine.Response(wine: wine))
        } catch {
            output.presentError(error)
        }
    }
}
