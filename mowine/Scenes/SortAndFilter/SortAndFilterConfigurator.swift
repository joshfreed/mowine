//
//  SortAndFilterConfigurator.swift
//  mowine
//
//  Created by Josh Freed on 3/18/17.
//  Copyright (c) 2017 BleepSmazz. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

// MARK: - Connect View, Interactor, and Presenter

extension SortAndFilterViewController: SortAndFilterPresenterOutput {
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        router.passDataToNextScene(segue: segue)
    }
}

extension SortAndFilterInteractor: SortAndFilterViewControllerOutput {
}

extension SortAndFilterPresenter: SortAndFilterInteractorOutput {
}

class SortAndFilterConfigurator {
    // MARK: - Object lifecycle

    static let sharedInstance = SortAndFilterConfigurator()

    private init() {
    }

    // MARK: - Configuration

    func configure(viewController: SortAndFilterViewController) {
        let router = SortAndFilterRouter()
        router.viewController = viewController

        let presenter = SortAndFilterPresenter()
        presenter.output = viewController

        let interactor = SortAndFilterInteractor()
        interactor.output = presenter

        viewController.output = interactor
        viewController.router = router
    }
}
