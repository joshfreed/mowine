//
//  WineDetailsViewController.swift
//  mowine
//
//  Created by Josh Freed on 3/21/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import Eureka
import JFLib

protocol WineDetailsDisplayLogic: class {
    func displayWine(viewModel: WineDetails.FetchWine.ViewModel)
    func displayWineImage(_ image: UIImage?)
}

class WineDetailsViewController: UITableViewController, WineDetailsDisplayLogic {
    var interactor: WineDetailsBusinessLogic?
    var router: (NSObjectProtocol & WineDetailsRoutingLogic & WineDetailsDataPassing)?

    let headerView = WineDetailsHeader()
    
    @IBOutlet weak var varietyCell: UITableViewCell!
    @IBOutlet weak var typeCell: UITableViewCell!
    @IBOutlet weak var priceCell: UITableViewCell!
    @IBOutlet weak var whereToBuyCell: UITableViewCell!
    @IBOutlet weak var whereToBuyLabel: UILabel!
    
    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: Setup

    private func setup() {
        let viewController = self
        let interactor = WineDetailsInteractor()
        let presenter = WineDetailsPresenter()
        let router = WineDetailsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        interactor.wineImageWorker = try! JFContainer.shared.container.resolve()
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: Routing

    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        
        tableView.rowHeight = UITableView.automaticDimension
        tableView.estimatedRowHeight = 44
        
        fetchWine()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        navigationController?.navigationBar.shadowImage = UIImage()
    }
    
    override func viewWillDisappear(_ animated: Bool) {
        super.viewWillDisappear(animated)
        navigationController?.navigationBar.shadowImage = nil
    }

    // MARK: Do something

    //@IBOutlet weak var nameTextField: UITextField!

    func fetchWine() {
        let request = WineDetails.FetchWine.Request()
        interactor?.fetchWine(request: request)
    }

    func displayWine(viewModel: WineDetails.FetchWine.ViewModel) {
        headerView.configure(wine: viewModel.wine)
        tableView.setAndLayoutTableHeaderView(header: headerView)
        
        typeCell.detailTextLabel?.text = viewModel.wine.type
        varietyCell.detailTextLabel?.text = viewModel.wine.variety
        priceCell.detailTextLabel?.text = viewModel.wine.price
        whereToBuyLabel.text = viewModel.wine.whereToBuy
    }
    
    func displayWineImage(_ image: UIImage?) {
        headerView.setWineImage(image)
    }
}
