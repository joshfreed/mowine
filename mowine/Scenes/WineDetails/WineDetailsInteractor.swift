//
//  WineDetailsInteractor.swift
//  mowine
//
//  Created by Josh Freed on 3/21/18.
//  Copyright (c) 2018 Josh Freed. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WineDetailsBusinessLogic {
    func fetchWine(request: WineDetails.FetchWine.Request)
}

protocol WineDetailsDataStore {
    var wine: Wine! { get set }
}

class WineDetailsInteractor: WineDetailsBusinessLogic, WineDetailsDataStore {
    var presenter: WineDetailsPresentationLogic?
    var worker: WineDetailsWorker?
    var wine: Wine!
    var wineImageWorker: WineImageWorkerProtocol?

    // MARK: Fetch wine

    func fetchWine(request: WineDetails.FetchWine.Request) {
        worker = WineDetailsWorker()
        worker?.doSomeWork()

        let response = WineDetails.FetchWine.Response(wine: wine)
        presenter?.presentWine(response: response)
        
        wineImageWorker?.fetchPhoto(wine: wine) { result in
            switch result {
            case .success(let data): self.presenter?.presentWineImage(data: data)
            case .failure: break
            }
        }
    }
}
